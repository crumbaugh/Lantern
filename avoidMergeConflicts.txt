FOR BEN:

this goes in pickupputdown

public void SetIsHeld(bool b) {
		IsHeld = b;
		if (!IsHeld) {
			Vector3 temp = transform.position;
			temp.x = (int)temp.x / 10;
			temp.x = temp.x * 10;
			temp.y = (int)temp.y / 10;
			temp.y = temp.y * 10;
			transform.position = temp;
			SetColor("holding");
		} else {
			SetColor("ineligible");
		}
	}

	public bool GetIsHeld() {
		return IsHeld;
	}

	public void SetColor(string status) {
		if (status == "holding") {
			GetComponent<SpriteRenderer>().color = heldColor;
			return;
		}
		if (status == "eligible") {
			GetComponent<SpriteRenderer>().color = eligibleColor;
			return;
		}
		GetComponent<SpriteRenderer>().color = downColor;
	}


this is the new update in interactwithobjects

	// Update is called once per frame
	void Update () {
		if (lantern.GetComponent<PickUpPutDown>().GetIsHeld()) {
			lantern.GetComponent<PickUpPutDown>().SetColor("holding");
		} else if (Vector2.Distance(transform.position,lantern.transform.position) <= 5) {
			lantern.GetComponent<PickUpPutDown>().SetColor("eligible");
		} else {
			lantern.GetComponent<PickUpPutDown>().SetColor("ineligible");			
		}
		if (Input.GetKeyDown(KeyCode.Space) && transform.position.x % 10 == 0 && transform.position.y % 10 == 0) {
			if (lantern.GetComponent<PickUpPutDown>().GetIsHeld()) {
				lantern.GetComponent<PickUpPutDown>().SetIsHeld(false);
			} else {
				if (lantern.transform.position == transform.position)
					lantern.GetComponent<PickUpPutDown>().SetIsHeld(true);
			}
		}
	}