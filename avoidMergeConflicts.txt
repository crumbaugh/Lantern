FOR BEN:

doody.

@pickupputdown
using UnityEngine;
using System.Collections;

public class PickUpPutDown : MonoBehaviour {
       public GameObject player;
       public Color downColor;
       public Color eligibleColor;
       public Color heldColor;
       private bool IsHeld;
       private GameObject door;
       private bool isKey;
       private int keyNum;
       
       // Use this for initialization
       void Start () {
       	    if ((Vector2.Distance(transform.position, GameObject.FindGameObjectWithTag ("Lantern").transform.position)) == 0) {
	       					      IsHeld = true;
						      	       isKey = false;
							       	       GetComponent<SpriteRenderer>().color = heldColor;
								       					    } else {
													      	   IsHeld = false;
														   	    isKey = true;
															    	    if ((Vector2.Distance(transform.position, GameObject.FindGameObjectWithTag ("key1").transform.position)) == 0) {
																       					      				       keyNum = 1;
																									       	      	} else if ((Vector2.Distance(transform.position, GameObject.FindGameObjectWithTag ("key2").transform.position)) == 0) {
																											       	  keyNum = 2;
																												  	   } else if ((Vector2.Distance(transform.position, GameObject.FindGameObjectWithTag ("key3").transform.position)) == 0) {
																													     	     keyNum = 3;
																														     	      }
																															        GetComponent<SpriteRenderer>().color = downColor;
																																				     }
																																				      door = GameObject.FindGameObjectWithTag("Door");
																																				      }
																																				      
																																				      // Update is called once per frame
																																				      void Update () {
																																				      	   if (IsHeld) {
																																					      	       transform.position = player.transform.position;
																																						       			    if (isKey) {
																																									       	        openDoor(keyNum);
																																											  }
																																											   }
																																											   }

																																											   public void SetIsHeld(bool b) {
																																											   	  IsHeld = b;
																																												  	 if (!IsHeld) {
																																													    	      Vector3 temp = transform.position;
																																														      	      	   temp.x = (int)temp.x / 10;
																																																   	    temp.x = temp.x * 10;
																																																	    	     temp.y = (int)temp.y / 10;
																																																		     	      temp.y = temp.y * 10;
																																																			      	       transform.position = temp;
																																																				       			    SetColor("holding");
																																																							     } else {
																																																							       	    SetColor("ineligible");
																																																								     }
																																																								     }

																																																								     public bool GetIsHeld() {
																																																								     	    return IsHeld;
																																																									    }

																																																									    public void SetColor(string status) {
																																																									    	   if (status == "holding") {
																																																										      	      GetComponent<SpriteRenderer>().color = heldColor;
																																																											      					     return;
																																																																      }
																																																																       if (status == "eligible") {
																																																																       	  	  GetComponent<SpriteRenderer>().color = eligibleColor;
																																																																		  				       	 return;
																																																																							  }
																																																																							   GetComponent<SpriteRenderer>().color = downColor;
																																																																							   }

																																																																							   public void openDoor(int i) {
																																																																							   	  if ((Vector2.Distance(transform.position, GameObject.FindGameObjectWithTag ("Door" + i).transform.position)) < 10) {
																																																																								     					    Color newcolor = door.GetComponent<Renderer>().material.color;
																																																																													    	  	   newcolor.a = 0;
																																																																															   	      	door.GetComponent<Renderer>().material.color = newcolor;
																																																																																						       transform.GetComponent<Renderer>().material.color= newcolor;
																																																																																						       							  }
																																																																																													  }
}
